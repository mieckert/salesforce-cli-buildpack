#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

START_TIME=$SECONDS

# set -x
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

# set defaults for optional config vars
: ${SFDX_BUILDPACK_DEBUG:="false"}

source $BP_DIR/lib/common.sh
source $BP_DIR/lib/stdlib.sh

### Setup functions

setup_dirs() {
  export PATH="$BUILD_DIR/vendor/sfdx/cli/bin:$PATH"
  export PATH="$BUILD_DIR/vendor/sfdx/jq:$PATH"
}

header 'Welcome to salesforce-cli-buildpack!'
log "Exporting environment directories ..."
export_env "$ENV_DIR"

log "Setting up paths ..."

log "BUILD_DIR: $BUILD_DIR"
log "CACHE_DIR: $CACHE_DIR"
log "ENV_DIR: $ENV_DIR"
log "BP_DIR: $BP_DIR"

setup_dirs

log "Installing Salesforce CLI (SFDX)"
npm install sfdx-cli --global
log "Installing sfdx-waw-plugin"
echo "y" | sfdx plugins:install -f sfdx-waw-plugin
log "Installing shane-sfdx-plugins"
npm install -g shane-sfdx-plugins
sfdx plugins:link $BUILD_DIR/.heroku/node/lib/node_modules/shane-sfdx-plugins

log "Output of sfdx plugins"
sfdx plugins

log "Debug output"
pwd
find . -type f -and -not -path '*shane*' -exec grep -H -i "shane" {} \;

#echo "y" | sfdx plugins:install -f shane-sfdx-plugins
#log "Installing jq"
#npm install jq --global

header "DONE! Completed in $(($SECONDS - $START_TIME))s"
exit 0